# docker-compose.yml

version: '3'

services:

  ### Nginx Container
  nginx:
    build: containers/nginx
    image: nginx:${NG_VERSION}
    ports:
      - "${NG_PORT}:80"
    volumes:
      - ./../:/var/www

      - ./containers/nginx/config/default:/etc/nginx/conf.d/default.conf

      - ./containers/nginx/config/nginx.conf:/etc/nginx/nginx.conf

      - ./logs/nginx:/var/log/nginx
    links:
      - php

  ### PHP Container
  php:
    build: containers/php
    image: php:${PHP_VERSION}
    ports:
      - "9000"
    volumes:
      - ./../:/var/www

      - ./containers/php/config/php.ini:/usr/local/etc/php/php.ini
      - ./containers/php/config/www.conf:/usr/local/etc/php-fpm.d/www.conf

      - ./logs/php:/var/log/php
    links:
      - mysql

  ### MySQL Container
  mysql:
    build: containers/mysql
    image: mysql:${DB_VERSION}
    volumes:
      - ./containers/mysql/data:/var/lib/mysql

      - ./containers/mysql/config/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf

      - ./logs/mysql:/var/log/mysql
    ports:
      - "13306:${DB_PORT?Missing DB_PORT variable in .env.example}"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE?Missing DB_DATABASE variable in .env}
      MYSQL_USER: ${DB_USERNAME?Missing DB_USERNAME variable in .env}
      MYSQL_PASSWORD: ${DB_PASSWORD?Missing DB_PASSWORD variable in .env}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD?Missing DB_PASSWORD variable in .env}

  ### Workspace Utilities Container
  workspace:
    build: containers/workspace
    volumes:
      - ./../:/var/www
    links:
      - mysql
    tty: true
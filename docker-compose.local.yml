# docker-compose.local.yml

version: '3.7'

volumes:
  data:
    driver: local

services:

  ## ================== DATABASE
  database:
    build:
      context: .
      dockerfile: ./containers/${DB_DRIVER}/Dockerfile
      args:
        version: ${DB_VERSION}
        db_database: ${DB_DATABASE?Missing DB_DATABASE variable in .env}
        db_user: ${DB_USERNAME?Missing DB_USERNAME variable in .env}
        db_password: ${DB_PASSWORD?Missing DB_PASSWORD variable in .env}
        db_root_password: ${DB_PASSWORD?Missing DB_PASSWORD variable in .env}
        db_external_port: ${DB_EXTERNAL_PORT?Missing DB_EXTERNAL_PORT variable in .env}
        db_storage: ${DB_STORAGE_PATH?Missing DB_STORAGE_PATH variable in .env}
    volumes:
      - data:${DB_STORAGE_PATH}
    ports:
      - "${DB_EXTERNAL_PORT?Missing DB_EXTERNAL_PORT variable in .env}:${DB_PORT?Missing DB_PORT variable in .env}"
    networks:
      - network

  ## ================== APP
  app:
    volumes:
      - ./application:${WORKING_DIR}
#      - ./containers/app/config/php.ini:/usr/local/etc/php/php.ini
#      - ./containers/app/config/www.conf:/usr/local/etc/php-fpm.d/www.conf
    links:
      - database

  ## ================== SERVER
  server:
    volumes:
      - ./containers/nginx/config/nginx.conf:/etc/nginx/nginx.conf

  ## ================== WORKSPACE
  workspace:
    build:
      context: .
      dockerfile: ./containers/workspace/Dockerfile
      args:
        version: ${PHP_VERSION}
        working_dir: ${WORKING_DIR}
    volumes:
      - ./application:${WORKING_DIR}
      - ./.env:${WORKING_DIR}/.env
    tty: true
    networks:
      - network
    working_dir: ${WORKING_DIR}
    links:
      - database
    depends_on:
      - app
      - server
